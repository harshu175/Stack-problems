*/  1. You are given a number n, representing the number of time-intervals.
2. In the next n lines, you are given a pair of space separated numbers.
3. The pair of numbers represent the start time and end time of a meeting (first number is start time and second number is end time)
4. You are required to merge the meetings and print the merged meetings output in increasing order of start time.

E.g. Let us say there are 6 meetings
1 8
5 12
14 19
22 28
25 27
27 30

Then the output of merged meetings will belongs
1 12
14 19
22 30   */


import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) throws Exception {
        // write your code here
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int n = Integer.parseInt(br.readLine());
        int[][] arr = new int[n][2];

        for (int j = 0; j < n; j++) {
            String line = br.readLine();
            arr[j][0] = Integer.parseInt(line.split(" ")[0]);
            arr[j][1] = Integer.parseInt(line.split(" ")[1]);
        }

        mergeOverlappingIntervals(arr);
    }

    public static void mergeOverlappingIntervals(int[][] arr) {
        // merge overlapping intervals and print in increasing order of start time
        Stack<Integer> st=new Stack<>();
        st.push(arr[0][0]);
        st.push(arr[0][1]);
        for(int i=1;i<arr.length;i++){
            for(int j=0;j<arr[0].length;j++){
                if(arr[i][j]>st.peek()){
                    st.push(arr[i][j]);
                    
                    int val2=st.pop();
                    int val1=st.pop();
                    System.out.println(val1+" "+val2);
                   
                }else{
                    
                }
            }
        }
        
    }

}
